// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id         String  @id @default(uuid())
  summonerId String  @unique
  playerName String
  tagLine    String
  regionInfo String
  matches    Match[]
}

model Match {
  id               String   @id @default(uuid())
  metaId           Json     @unique
  summonerId       String
  matchId          String
  playerName       String
  tagLine          String
  regionInfo       String
  queueInfo        String
  relativeTime     String
  gameDuration     String
  outcome          String
  champIcon        String
  champLevel       Int
  spellInfo1       String
  spellInfo2       String
  runeInfo1        String
  runeInfo2        String
  kills            Int
  deaths           Int
  assists          Int
  kdaRatio         Float
  kpRatio          Int?
  gold             Int
  creepScore       Int
  creepScorePerMin Float
  controlWards     Int
  itemId0          Int
  itemId1          Int
  itemId2          Int
  itemId3          Int
  itemId4          Int
  itemId5          Int
  itemId6          Int
  visionPings      Int
  pushPings        Int
  dangerPings      Int
  pathingPings     Int
  assistPings      Int
  missingPings     Int
  multiKill        String?
  blueTeamPlayers  String[]
  blueTeamTags     String[]
  blueTeamChamps   String[]
  redTeamPlayers   String[]
  redTeamTags      String[]
  redTeamChamps    String[]
  player           Player   @relation(fields: [summonerId], references: [summonerId])

  @@unique([summonerId, matchId])
}
